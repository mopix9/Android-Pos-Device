// Generated by Dagger (https://dagger.dev).
package com.masa.aryan.di;

import android.content.Context;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata("dagger.hilt.android.qualifiers.ApplicationContext")
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class AppModule_ProvideApplicationContextFactory implements Factory<Context> {
  private final Provider<Context> appProvider;

  public AppModule_ProvideApplicationContextFactory(Provider<Context> appProvider) {
    this.appProvider = appProvider;
  }

  @Override
  public Context get() {
    return provideApplicationContext(appProvider.get());
  }

  public static AppModule_ProvideApplicationContextFactory create(Provider<Context> appProvider) {
    return new AppModule_ProvideApplicationContextFactory(appProvider);
  }

  public static Context provideApplicationContext(Context app) {
    return Preconditions.checkNotNullFromProvides(AppModule.INSTANCE.provideApplicationContext(app));
  }
}
